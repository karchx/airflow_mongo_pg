version: '3.9'

x-common: &common
  build: .
  user: "${AIRFLOW_UID}:0"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock

x-depends-on: &depends-on
  depends_on:
    - postgres
    - airflow-init

x-environments: &environments
    env_file:
      - .env

services:
  postgres:
    <<: *environments
    image: postgres:latest
    ports:
      - '5432:5432'
    container_name: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    volumes:
      - db:/var/lib/postgresql/data

  scheduler:
    <<: [*common, *depends-on, *environments]
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"
  
  webserver:
    <<: [*common, *depends-on, *environments]
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
  
  airflow-init:
    <<: [*common, *environments]
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version 

  airflow-cli:
    <<: [*common, *depends-on, *environments]
    profiles:
      - debug
    command:
      - bash
      - -c
      - airflow
  
  airflow-worker:
    <<: [*common, *depends-on, *environments]
    command: celery worker
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

volumes:
  db:
